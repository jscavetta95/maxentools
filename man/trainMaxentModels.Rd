% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/trainMaxentModels.R
\name{trainMaxentModels}
\alias{trainMaxentModels}
\title{Train maxent models with the provided occurence data, background data, environmental predictors, and hyperparameter ranges.}
\usage{
trainMaxentModels(occurrence_data, background_data, predictors, factors,
  regularization_iterations, regularization_range, shape, output_folder)
}
\arguments{
\item{occurrence_data}{An occurrence dataframe containing cooridnates and environmental data at each coordinate.}

\item{background_data}{Dataframe of selected background coordinates and extracted environmental predictor data.}

\item{predictors}{A RasterStack of RasterLayer objects representing the environmental predictors.}

\item{factors}{The combination of factors to use. Should be structured like "LQHPT".
L = linear, Q = quadratic, H = hinge, P = product, T = threshold.}

\item{regularization_iterations}{The number of regularization values to try for each factor value.
Essentially the number of models to run for each factor.}

\item{regularization_range}{A 2 element vector containing the start and end of the regularization values
to consider in the search.}

\item{shape}{A shapefile to overlay on produced predictive maps.}

\item{output_folder}{The path where data and plots will be saved.}
}
\value{
A list containing the best model, the occurrence data used, the arguments (hyperparameters) used,
the predictive map generated from the best model, and the path where data was saved.
}
\description{
Train models with varying factor combinations and beta regularization values. Each factor combination provided will be
separately trained the desired amount of beta regularization values. Beta regularization values are found using the LIPO
search technique, which will generally tend towards the best hyperparameter value for the test case. Many metrics are calculated
and provided, however, currently the symmetric extremal dependence index (SEDI) metric is used to determine the best model.
Total number of models trained = factors * regularization iterations.
}
